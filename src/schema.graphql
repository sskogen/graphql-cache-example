# The "Query" type is special: it lists all of the available queries that
# clients can execute, along with the return type for each. In this
# case, the "books" query returns an array of zero or more Books (defined above).
type Query {
    books: [Book] @cacheControl(maxAge: 5, scope: PUBLIC)
}

# This "Book" type defines the queryable fields for every book in our data source.
type Book @cacheControl(maxAge: 5, scope: PUBLIC) {
    id: Int,
    title: String
    author_id: Int
    author: Author
}

type Author @cacheControl(maxAge: 5, scope: PUBLIC) {
    id: Int,
    name: String
    book_ids: [Int]
    books: [Book]
}


enum CacheControlScope {
    PUBLIC
    PRIVATE
}

directive @cacheControl(
    maxAge: Int
    scope: CacheControlScope
    inheritMaxAge: Boolean
) on FIELD_DEFINITION | OBJECT | INTERFACE | UNION
